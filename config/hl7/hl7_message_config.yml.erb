#Note:
#The keys directly correspond to the methods in isaac's code
#See gov.vha.isaac.ochre.services.dto.publish.MessageProperties.
#Ruby will dynamically create the appropriate methods on a poro capable of casting to a pojo.
# Note the edge case that doesn't perfectly follow the CamelCase pattern: getSendingApplicationNamespaceIdMD5
#in this case, we ensure the key's case matches the method.

# Settings used by the converter to configure the sending application.
sending_application_namespace_id_update: VETS UPDATE
sending_application_namespace_id_MD5: VETS MD5
sending_application_namespace_id_site_data: VETS DATA

# Target Application at VistA sites
receiving_application_namespace_id_update: XUMF UPDATE
receiving_application_namespace_id_MD5: XUMF MD5
receiving_application_namespace_id_site_data: XUMF DATA

#Message Version ID
version_id: '2.4'

#acceptAcknowledgementType
accept_acknowledgement_type: AL
application_acknowledgement_type: AL
country_code: USA

#MFI field values
master_file_identifier: Standard Terminology
name_of_coding_system: ERT
file_level_event_code: MUP
response_level_code: NE

#MFE field values
record_level_event_code: NE

#QRD field values
query_format_code: R
query_priority: I
query_id: Standard Terminology Query
query_limited_request_quantity: 99999
query_who_subject_filter_id_number: ALL
query_what_department_data_code_identifier: VA

#CE static field values
sub_field_separator: '@'
receiving_application_namespace_id_update: XUMF UPDATE
query_limited_request_units: 5
