<!-- Trigger the modal with a button -->
</br>
<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#app_deploy_modal" onclick="reset_form();">New Application Deployment</button>
<div class="page-header">
  <h1>Application Deployer</h1>
</div>

<%
  locals = {}
  fields = {}
  fields['job_name'] = 'Job Name'
  fields['started_at'] = 'Started At'
  fields['user'] = 'User Name'
  fields['leaf_data.running_msg'] = 'Current Result'
  fields['leaf_data.completed_at'] = 'Last Check /<br>Completed At'
  fields['leaf_data.elapsed_time'] = 'Elapsed Time'
  locals['fields'] = fields
  locals['poll_function_name'] = 'reload_deployments'
  locals['poll_key'] = 'polling.pollEnum.DEPLOYER'
  locals['poll_route'] = 'gon.routes.app_deployer_reload_deployments_path'
  locals['check_poll_route'] = 'gon.routes.app_deployer_check_polling_path'
%>

<%= render 'app_deployer/app_deploments_table', locals: locals %>

<!-- Modal -->
<div id="app_deploy_modal" class="modal fade modal-wide50" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>
        <h3 class="modal-title">Application Deployer</h3>
      </div>
      <div class="modal-body">
        <%= form_tag(app_deployer_deploy_app_path, :id => 'app_deployer_form') do |f| %>
            <h3>Select the Application Type</h3>
            <%= field_set_tag 'Select the Application Type' do %>
                <%= label_tag 'application_KOMET', class: 'radio-inline' do %>
                    <%= radio_button_tag 'application', 'KOMET', true %>KOMET Tooling Deployment
                <% end %>
                <br/>
                <%= label_tag 'application_ISAAC', class: 'radio-inline' do %>
                    <%= radio_button_tag 'application', 'ISAAC' %>ISAAC Deployment
                <% end %>
            <% end %>

            <h3>Select the Application Components</h3>
            <%= field_set_tag 'Select the Application Components for Deployment to Tomcat' do %>
                <div id="komet_wars">
                  <%= label_tag 'komet_war', 'KOMET Tooling Version to Use' %><br>
                  <%= select_tag 'komet_war', options_from_collection_for_select(@komet_wars, 'select_key', 'select_value'), {:prompt => '-- Select a war to deploy --'} %>
                  <br>
                  <br>
                  <%= label_tag 'tomcat_isaac_rest', 'ISAAC Rest Version to Use' %><br>
                  <%= select_tag 'tomcat_isaac_rest', options_for_select(@tomcat_isaac_rest.collect { |ir| [ir[:select_value], ir[:select_key]] }), {:prompt => '-- Select an ISAAC Rest Instance --'} %>
                </div>
                <div id="isaac_wars">
                  <%= label_tag 'isaac_war', 'ISAAC Rest Version to Use' %><br>
                  <%= select_tag 'isaac_war', options_from_collection_for_select(@isaac_wars, 'select_key', 'select_value'), {:prompt => '-- Select a war to deploy --'} %>
                  <br>
                  <br>
                  <%= label_tag 'isaac_db', 'ISAAC Database Version to Use' %><br>
                  <%= select_tag 'isaac_db', options_from_collection_for_select(@isaac_dbs, 'select_key', 'select_value'), {:prompt => '-- Select a terminology database --'} %>
                </div>
                <br>
            <% end %>\

            <h3>Select the Tomcat Server</h3>
            <%= field_set_tag 'Select the Tomcat Server to Host this Deployment' do %>
                <%= label_tag PrismeService::TOMCAT, 'Tomcat Server to Deploy to:' %><br>
                <%= select_tag PrismeService::TOMCAT, options_from_collection_for_select(@tomcat_servers, 'select_key', 'select_value'), {:prompt => '-- Select the Tomcat Server --', required: true} %>
                <%= select_tag PrismeService::TOMCAT, options_from_collection_for_select(@tomcat_servers.map do |e| e[:tomcat_ar] end.uniq, 'select_key', 'select_value'), {:prompt => '-- Select the Tomcat Server --', required: true} %>
            <% end %>

            <h3>Submit Deployment Request</h3>
            <%= field_set_tag 'Application Deployment Summary' do %>
                <p>Please review the information below before submitting the deployment request.</p>
                <section>
                  <h4 class="text-italic text-underline">Application to Deploy</h4>
                  <div id="summary_application" class="app_deployer"></div>
                  <h4 class="text-italic text-underline">Application Components</h4>
                  <div id="summary_component" class="app_deployer"></div>
                  <h4 class="text-italic text-underline">Tomcat Server</h4>
                  <div id="summary_tomcat" class="app_deployer"></div>
                </section>
            <% end %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<script>
    var selected_app_type = null;

    function reset_form() {
        $("#app_deployer_form").steps("destroy");
        init_wizard();
    }

    $(document).ready(function () {
        init_wizard();
    });

    function init_wizard() {
        var form = $('#app_deployer_form');
        form.show();
        form.steps({
            headerTag: "h3",
            bodyTag: "fieldset",
            transitionEffect: "fade",
            onStepChanging: function (event, currentIndex, newIndex) {
                // Always allow previous action even if the current form is not valid!
                if (currentIndex > newIndex) {
                    return true;
                }
                if (newIndex === 1) {
                    //get the selected radio button for the application to deploy
                    selected_app_type = $("input[name=application]:checked").val();

                    if (selected_app_type === 'KOMET') {
                        $('#komet_wars').show();
                        $('#isaac_wars').hide();
                        document.getElementById("komet_war").required = true;
                        document.getElementById("tomcat_isaac_rest").required = true;
                        document.getElementById("isaac_war").required = false;
                        document.getElementById("isaac_db").required = false;
                    }
                    else {
                        $('#komet_wars').hide();
                        $('#isaac_wars').show();
                        document.getElementById("komet_war").required = false;
                        document.getElementById("tomcat_isaac_rest").required = false;
                        document.getElementById("isaac_war").required = true;
                        document.getElementById("isaac_db").required = true;
                    }
                    document.getElementById("komet_war").value = '';
                    document.getElementById("tomcat_isaac_rest").value = '';
                    document.getElementById("isaac_war").value = '';
                    document.getElementById("isaac_db").value = '';
                }
                return form.valid();
            },
            onStepChanged: function (event, currentIndex, priorIndex) {
                var step_ul = $('<ul>');
                var component1 = '';
                var component2 = '';

                if (currentIndex === 1) {
                    var id = $("input[name=application]:checked").attr('id');
                    var application_type = $("label[for='" + id + "']").text();
                    step_ul.append($('<li>').text(application_type));
                    $("#summary_application").html(step_ul);
                }
                if (currentIndex === 2) {
                    if (selected_app_type === 'KOMET') {
                        component1 = $("#komet_war").find("option:selected").text();
                        component2 = $("#tomcat_isaac_rest").find("option:selected").text();
                    }
                    else {
                        component1 = $("#isaac_war").find("option:selected").text();
                        component2 = $("#isaac_db").find("option:selected").text();
                    }
                    step_ul.append($('<li>').text(component1)).append($('<li>').text(component2));
                    $("#summary_component").html(step_ul);
                }
                if (currentIndex === 3) {
                    var tomcat = $("#tomcat").find("option:selected").text();
                    step_ul.append($('<li>').text(tomcat));
                    $("#summary_tomcat").html(step_ul);
                }
            }
            ,
            onFinishing: function (event, currentIndex) {
                form.validate().settings.ignore = ":disabled";
                return form.valid();
            }
            ,
            onFinished: function (event, currentIndex) {
                var btnFinish = $("li > a[href$='#finish']");
                if (btnFinish.hasClass('valid-submit')) {
                    return false;
                } else {
                    btnFinish.attr('disabled', true).addClass('btn btn-primary valid-submit');
                    $("li > a[href$='#previous']").hide();
                }

                form.attr('action', '<%= app_deployer_deploy_app_path %>');
                form.attr('method', 'post');
                var action = form.attr('action');
                form.submit();
                setTimeout(function() {
                  $('#app_deploy_modal').modal('toggle');
                  flash_notify({message: 'The deployment request was received successfully!'}, {type: 'success'})
                }, 4000);
            }
        }).validate({
            errorPlacement: function errorPlacement(error, element) {
                var lbl = $(element)
                    .closest("form")
                    .find("label[for='" + element.attr("id") + "']");
                error.addClass('arrow_box');
                error.insertAfter(lbl);
            }
        });
    }
</script>
